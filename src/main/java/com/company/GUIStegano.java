/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.company;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Kevin
 */
public class GUIStegano extends javax.swing.JFrame {
    boolean useEncryption;
    private File secretFile;
    private String imgFilePath;
    private com.company.Image stegoImg;

    /**
     * Creates new form GUIStegano
     */
    public GUIStegano() {
        super("Stegano-tools");
        initComponents();
        this.setResizable(false);
        inputTextRadioButton.setSelected(true);
        selectFileButton.setEnabled(false);
        extractedTextArea.setEnabled(false);
        decryptedTextArea.setEnabled(false);
        decryptButton.setEnabled(false);
        saveButton.setEnabled(false);
        extractButton.setEnabled(false);
        complexitySpinner.setModel(new SpinnerNumberModel(0.3, 0.09, 0.50, 0.05));
        extractComplexitySpinner.setModel(new SpinnerNumberModel(0.3, 0.09, 0.50, 0.05));
        useEncryption = false;
        secretFile = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        embeddingPanel = new javax.swing.JPanel();
        selectImageButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        stegoObjLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        coverObjLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        messageTextArea = new javax.swing.JTextField();
        selectFileButton = new javax.swing.JButton();
        fileHeaderLabel = new javax.swing.JLabel();
        inputTextRadioButton = new javax.swing.JRadioButton();
        inputFileRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        stegoKeyTextField = new javax.swing.JTextField();
        complexitySpinner = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        PSNRvalue = new javax.swing.JLabel();
        useEncryptionCheckBox = new javax.swing.JCheckBox();
        embedButton = new javax.swing.JButton();
        saveStegoButton = new javax.swing.JButton();
        extractingPanel = new javax.swing.JPanel();
        selectStegoButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        inputStegoLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        stegoKeyExtractTextField = new javax.swing.JTextField();
        extractButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        decryptedTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        extractedTextArea = new javax.swing.JTextArea();
        decryptButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        decryptedFileHeaderLabel = new javax.swing.JLabel();
        extractedFileHeaderLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        extractComplexitySpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectImageButton.setText("Select image..");
        selectImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Cover-object");

        stegoObjLabel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setText("Stego-object");

        coverObjLabel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Secret message");

        selectFileButton.setText("Select file..");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        inputTextRadioButton.setText("Text");
        inputTextRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextRadioButtonActionPerformed(evt);
            }
        });

        inputFileRadioButton.setText("File");
        inputFileRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileRadioButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Stego-key (max: 25 chars)");

        jLabel8.setText("Complexity treshold");

        jLabel9.setText("PSNR : ");

        useEncryptionCheckBox.setText("Encrypt message");
        useEncryptionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useEncryptionCheckBoxActionPerformed(evt);
            }
        });

        embedButton.setText("Start Embedding");
        embedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                embedButtonActionPerformed(evt);
            }
        });

        saveStegoButton.setText("Save stego-image..");
        saveStegoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStegoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout embeddingPanelLayout = new javax.swing.GroupLayout(embeddingPanel);
        embeddingPanel.setLayout(embeddingPanelLayout);
        embeddingPanelLayout.setHorizontalGroup(
            embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(embeddingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(embeddingPanelLayout.createSequentialGroup()
                        .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(embeddingPanelLayout.createSequentialGroup()
                                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(coverObjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(stegoObjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(embeddingPanelLayout.createSequentialGroup()
                                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputTextRadioButton)
                                    .addComponent(jLabel7)
                                    .addComponent(stegoKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(messageTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fileHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(embeddingPanelLayout.createSequentialGroup()
                                        .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inputFileRadioButton)
                                            .addComponent(selectFileButton)
                                            .addComponent(jLabel8)
                                            .addComponent(complexitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(embeddingPanelLayout.createSequentialGroup()
                                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(useEncryptionCheckBox)
                                    .addComponent(embedButton))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(embeddingPanelLayout.createSequentialGroup()
                        .addComponent(selectImageButton)
                        .addGap(263, 263, 263)
                        .addComponent(jLabel9)
                        .addGap(7, 7, 7)
                        .addComponent(PSNRvalue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveStegoButton)
                        .addGap(34, 34, 34))))
        );
        embeddingPanelLayout.setVerticalGroup(
            embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(embeddingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(embeddingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coverObjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(embeddingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stegoObjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectImageButton)
                    .addComponent(jLabel9)
                    .addComponent(PSNRvalue)
                    .addComponent(saveStegoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputFileRadioButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inputTextRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(embeddingPanelLayout.createSequentialGroup()
                        .addComponent(selectFileButton)
                        .addGap(11, 11, 11)
                        .addComponent(fileHeaderLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(embeddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stegoKeyTextField)
                    .addComponent(complexitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useEncryptionCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(embedButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Embedding", embeddingPanel);

        selectStegoButton.setText("Select image..");
        selectStegoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectStegoButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Stego-object");

        inputStegoLabel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Stego-key (max: 25 chars)");

        stegoKeyExtractTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stegoKeyExtractTextFieldActionPerformed(evt);
            }
        });

        extractButton.setText("Start Extracting");
        extractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Extracted message");

        jLabel3.setText("Decrypted message");

        decryptedTextArea.setColumns(20);
        decryptedTextArea.setRows(5);
        jScrollPane2.setViewportView(decryptedTextArea);

        extractedTextArea.setColumns(20);
        extractedTextArea.setRows(5);
        jScrollPane3.setViewportView(extractedTextArea);

        decryptButton.setText("Decrypt message");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        jLabel16.setText("Extracted file");

        jLabel17.setText("Original :");

        jLabel18.setText("Decrypted :");

        saveButton.setText("Save as..");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Treshold :");

        javax.swing.GroupLayout extractingPanelLayout = new javax.swing.GroupLayout(extractingPanel);
        extractingPanel.setLayout(extractingPanelLayout);
        extractingPanelLayout.setHorizontalGroup(
            extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(extractingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(extractingPanelLayout.createSequentialGroup()
                        .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stegoKeyExtractTextField)
                            .addGroup(extractingPanelLayout.createSequentialGroup()
                                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(extractingPanelLayout.createSequentialGroup()
                                        .addComponent(selectStegoButton)
                                        .addGap(98, 98, 98)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(extractComplexitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addComponent(decryptButton)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(extractButton, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(extractingPanelLayout.createSequentialGroup()
                        .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(inputStegoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addGroup(extractingPanelLayout.createSequentialGroup()
                                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(extractedFileHeaderLabel)
                                    .addComponent(decryptedFileHeaderLabel))))))
                .addContainerGap())
        );
        extractingPanelLayout.setVerticalGroup(
            extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(extractingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(extractingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputStegoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(extractingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(extractedFileHeaderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(decryptedFileHeaderLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectStegoButton)
                    .addComponent(decryptButton)
                    .addComponent(saveButton)
                    .addComponent(extractComplexitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(extractingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stegoKeyExtractTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Extracting", extractingPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        //In response to a button click:
        fc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            secretFile = fc.getSelectedFile();
            fileHeaderLabel.setText(secretFile.getName());
        }
    }//GEN-LAST:event_selectFileButtonActionPerformed

    private void selectImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        //In response to a button click:
        fc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                File imgfile = fc.getSelectedFile();
                imgFilePath = imgfile.getPath();
                ImageIcon icon = new ImageIcon(ImageIO.read(imgfile));
                Image img = icon.getImage();
                img = img.getScaledInstance(coverObjLabel.getWidth(),coverObjLabel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newicon = new ImageIcon(img);
                coverObjLabel.setIcon(newicon);
            } catch (IOException ex) {
                Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_selectImageButtonActionPerformed

    private void selectStegoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectStegoButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        //In response to a button click:
        fc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                File imgfile = fc.getSelectedFile();
                imgFilePath = imgfile.getPath();
                stegoImg = new com.company.Image(imgFilePath);
                stegoImg.setPixelsRGB(stegoImg.getPixelsRGB());
                ImageIcon icon = new ImageIcon(ImageIO.read(imgfile));
                Image img = icon.getImage();
                img = img.getScaledInstance(inputStegoLabel.getWidth(),inputStegoLabel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newicon = new ImageIcon(img);
                inputStegoLabel.setIcon(newicon);
                extractButton.setEnabled(true);
            } catch (IOException ex) {
                Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_selectStegoButtonActionPerformed

    private void inputTextRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextRadioButtonActionPerformed
        inputTextRadioButton.setSelected(true);
        inputFileRadioButton.setSelected(false);
        messageTextArea.setEnabled(true);
        selectFileButton.setEnabled(false);
        fileHeaderLabel.setEnabled(false);
    }//GEN-LAST:event_inputTextRadioButtonActionPerformed

    private void inputFileRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileRadioButtonActionPerformed
        inputTextRadioButton.setSelected(false);
        inputFileRadioButton.setSelected(true);
        messageTextArea.setEnabled(false);
        selectFileButton.setEnabled(true);
        fileHeaderLabel.setEnabled(true);
    }//GEN-LAST:event_inputFileRadioButtonActionPerformed

    private void useEncryptionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useEncryptionCheckBoxActionPerformed
        useEncryption = !useEncryption;
    }//GEN-LAST:event_useEncryptionCheckBoxActionPerformed

    private void stegoKeyExtractTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stegoKeyExtractTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stegoKeyExtractTextFieldActionPerformed

    private void embedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_embedButtonActionPerformed
        if((coverObjLabel.getIcon()!=null)&&(messageTextArea.getText().length()!=0||secretFile!=null)&&(stegoKeyTextField.getText().length()>0&&stegoKeyTextField.getText().length()<=25)) {
            SteganoAlgorithm.alpha = (Double) complexitySpinner.getValue();
            if(inputTextRadioButton.isSelected()) {     // input berupa teks biasa
                if(messageTextArea.getText().length()<=SteganoAlgorithm.countPayloadByte(imgFilePath)) {
                    try {
                        //System.out.println(SteganoAlgorithm.alpha);
                        stegoImg = SteganoAlgorithm.insertText(imgFilePath, messageTextArea.getText(), stegoKeyTextField.getText(), useEncryption);
                    } catch (Exception ex) {
                        Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else
                    JOptionPane.showMessageDialog(this, "Secret message over payload! ("+SteganoAlgorithm.countPayloadByte(imgFilePath)+"bytes)");
            }
            else {                      FileInputStream in = null;
                try {
                    // input pesan rahasia berupa file
                    String headerFile = secretFile.getName();
                    byte[] fileData = new byte[(int) secretFile.length()];
                    in = new FileInputStream(secretFile);
                    in.read(fileData);
                    stegoImg = SteganoAlgorithm.insertFile(imgFilePath, headerFile, fileData, stegoKeyTextField.getText(), useEncryption);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        in.close();
                    } catch (IOException ex) {
                        Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            stegoImg.setPixelsRGB(stegoImg.convertToRGB());
            BufferedImage bufferedImage = new BufferedImage(stegoImg.getWidth(), stegoImg.getHeigth(), BufferedImage.TYPE_INT_RGB);
            bufferedImage.setRGB(0,0,stegoImg.getWidth(),stegoImg.getHeigth(),stegoImg.getPixels(),0,stegoImg.getWidth());
            ImageIcon icon = new ImageIcon(bufferedImage);
            Image img = icon.getImage();
            img = img.getScaledInstance(stegoObjLabel.getWidth(),stegoObjLabel.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon newicon = new ImageIcon(img);
            stegoObjLabel.setIcon(newicon);
            com.company.Image image=new com.company.Image(imgFilePath);
            PSNRvalue.setText(String.valueOf(SteganoAlgorithm.countPSNR(image, stegoImg)));
        }
        else {
            JOptionPane.showMessageDialog(this, "Input field haven't completed!");
        }
    }//GEN-LAST:event_embedButtonActionPerformed

    private void extractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractButtonActionPerformed
        if(stegoKeyExtractTextField.getText().length()>0&&stegoKeyExtractTextField.getText().length()<=25) {
            try {
                decryptButton.setEnabled(true);
                saveButton.setEnabled(true);
                SteganoAlgorithm.alpha = (Double) extractComplexitySpinner.getValue();
                List<Boolean> bodyFile = SteganoAlgorithm.Extract(imgFilePath, stegoKeyExtractTextField.getText());
                System.out.println("bodyFile size:"+bodyFile.size());
                if(SteganoAlgorithm.extractedHeaderSize==0) {
                    extractedTextArea.setEnabled(true);
                    extractedTextArea.setEditable(false);
                    extractedTextArea.setText(new String(SteganoAlgorithm.getContent(SteganoAlgorithm.extractedHeaderSize, SteganoAlgorithm.extractedBodySize, bodyFile)));
                }
                else {
                    extractedFileHeaderLabel.setText(SteganoAlgorithm.getFileHeader(SteganoAlgorithm.extractedHeaderSize, SteganoAlgorithm.extractedBodySize, bodyFile));
                }
            } catch (Exception ex) {
                Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Input field haven't completed!");
        }
    }//GEN-LAST:event_extractButtonActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        if(extractedTextArea.isEnabled()) {
            decryptedTextArea.setEnabled(true);
            decryptedTextArea.setText(CipherTools.decryptVigenereExtended(extractedTextArea.getText(), stegoKeyExtractTextField.getText()));
            decryptedTextArea.setEditable(false);
        }
        else {
            
        }
    }//GEN-LAST:event_decryptButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if(extractedTextArea.isEnabled()) {
            FileWriter fw = null;
            try {
                JFileChooser saveFile = new JFileChooser();
                saveFile.setCurrentDirectory(new File(System.getProperty("user.dir")));
                saveFile.showSaveDialog(null);
                fw = new FileWriter(saveFile.getSelectedFile());
                if(decryptedTextArea.isEnabled())
                    fw.write(decryptedTextArea.getText());
                else
                    fw.write(extractedTextArea.getText());
            } catch (IOException ex) {
                Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Error: Cannot save File!");
            } finally {
                try {
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else {
            try {
                // save binary file
                byte[] encrypted = new byte[8];
                // BELOM KELAR
                FileOutputStream outputStream;
                if(decryptedFileHeaderLabel.getText()!=null)
                    outputStream = new FileOutputStream(new File("data/message/"+decryptedFileHeaderLabel.getText()));
                else
                    outputStream = new FileOutputStream(new File("data/message/"+extractedFileHeaderLabel.getText()));
                outputStream.write(encrypted);
                outputStream.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUIStegano.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void saveStegoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStegoButtonActionPerformed
        if(stegoObjLabel.getIcon()!=null) {
            try {
                JFileChooser saveFile = new JFileChooser();
                saveFile.setCurrentDirectory(new File(imgFilePath));
                saveFile.showSaveDialog(null);
                stegoImg.saveImage(saveFile.getSelectedFile().getPath());
            } catch (IOException ex) {
                Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Error: Cannot save File!");
            }
        }
    }//GEN-LAST:event_saveStegoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIStegano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIStegano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIStegano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIStegano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIStegano().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PSNRvalue;
    private javax.swing.JSpinner complexitySpinner;
    private javax.swing.JLabel coverObjLabel;
    private javax.swing.JButton decryptButton;
    private javax.swing.JLabel decryptedFileHeaderLabel;
    private javax.swing.JTextArea decryptedTextArea;
    private javax.swing.JButton embedButton;
    private javax.swing.JPanel embeddingPanel;
    private javax.swing.JButton extractButton;
    private javax.swing.JSpinner extractComplexitySpinner;
    private javax.swing.JLabel extractedFileHeaderLabel;
    private javax.swing.JTextArea extractedTextArea;
    private javax.swing.JPanel extractingPanel;
    private javax.swing.JLabel fileHeaderLabel;
    private javax.swing.JRadioButton inputFileRadioButton;
    private javax.swing.JLabel inputStegoLabel;
    private javax.swing.JRadioButton inputTextRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTextField messageTextArea;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveStegoButton;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JButton selectImageButton;
    private javax.swing.JButton selectStegoButton;
    private javax.swing.JTextField stegoKeyExtractTextField;
    private javax.swing.JTextField stegoKeyTextField;
    private javax.swing.JLabel stegoObjLabel;
    private javax.swing.JCheckBox useEncryptionCheckBox;
    // End of variables declaration//GEN-END:variables
}
